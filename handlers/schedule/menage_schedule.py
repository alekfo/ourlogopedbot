from peewee import DoesNotExist
from datetime import timedelta
from telebot import TeleBot
from telebot.types import Message, ReplyKeyboardRemove
from DATABASE.peewee_config import Client, Week, Lesson
from states import reg_states_admin
from keyboards.main_keyboards import (
    go_to_menu,
    main_admin_commands,
    choise_action,
    lessons_markup,
    confirmation_in_schedule,
    days_markup)

def reg_menage_schedule_handlers(bot: TeleBot):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
    :param bot: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
    :return: None
    """

    @bot.message_handler(state=[reg_states_admin.in_schedule,
                                reg_states_admin.get_lesson_number,
                                reg_states_admin.delete_confirmation,
                                reg_states_admin.create_lesson,
                                reg_states_admin.choisen_action],
                         func=lambda message: '–ü–µ—Ä–µ–π—Ç–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é' in message.text)
    def return_to_menu(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è "–ü–µ—Ä–µ–π—Ç–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é" —Å–æ—Å—Ç–æ—è–Ω–∏–π
                                reg_states_admin.in_schedule,
                                reg_states_admin.get_lesson_number,
                                reg_states_admin.delete_confirmation,
                                reg_states_admin.create_lesson,
                                reg_states_admin.choisen_action
        –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é, –∞–Ω–∞–ª–æ–≥ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ admin_menu.
        –ú–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ reg_states_admin.in_any_block
        :param message: —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return: None
        """

        bot.send_message(message.chat.id,
                         '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                         reply_markup=main_admin_commands(), parse_mode='HTML')
        bot.set_state(message.from_user.id, reg_states_admin.in_any_block, message.chat.id)

    @bot.message_handler(state=reg_states_admin.in_schedule,
                         func=lambda message: '–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ' in message.text)
    def choising_action(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è reg_states_admin.in_schedule –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∞–¥–º–∏–Ω–æ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ".
        –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º, –ø—Ä–µ–¥–ª–∞–≥–∞—è –Ω–∞–∂–∞—Ç—å –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.
        –ú–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ reg_states_admin.choisen_action
        :param message: —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return: None
        """

        bot.send_message(message.chat.id,
                         '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?',
                         reply_markup=choise_action(), parse_mode='HTML')
        bot.set_state(message.from_user.id, reg_states_admin.choisen_action, message.chat.id)

    @bot.message_handler(state=reg_states_admin.choisen_action)
    def getting_weekday(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è reg_states_admin.choisen_action –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∞–¥–º–∏–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏—è.
        –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.
        –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∞–¥–º–∏–Ω—É –≤—ã–±—Ä–∞—Ç—å, –Ω–∞–¥ –∫–∞–∫–∏–º –¥–Ω–µ–º –Ω–µ–¥–µ–ª–∏ —Ç–æ—Ç —Ö–æ—á–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.
        –ú–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ reg_states_admin.get_weekday
        :param message: —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return: None
        """

        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['action'] = message.text
        bot.send_message(message.chat.id,
                         '–ö–∞–∫–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏?',
                         reply_markup=days_markup(), parse_mode='HTML')
        bot.set_state(message.from_user.id, reg_states_admin.get_weekday, message.chat.id)

    @bot.message_handler(state=reg_states_admin.get_weekday)
    def getting_lessons_number(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è reg_states_admin.get_weekday.
        –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏.
        –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∞–¥–º–∏–Ω—É –≤—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è —É—Ä–æ–∫–∞ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.
        –ú–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ reg_states_admin.get_lesson_number
        :param message: —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return: None
        """

        lessons_dict = {
            'üìÜ–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫': 0,
            'üìÜ–í—Ç–æ—Ä–Ω–∏–∫': 1,
            'üìÜ–°—Ä–µ–¥–∞': 2,
            'üìÜ–ß–µ—Ç–≤–µ—Ä–≥': 3,
            'üìÜ–ü—è—Ç–Ω–∏—Ü–∞': 4,
            'üìÜ–°—É–±–±–æ—Ç–∞': 5
        }
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['weekday'] = lessons_dict.get(message.text)
        bot.send_message(message.chat.id,
                         '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è —É—Ä–æ–∫–∞',
                         reply_markup=lessons_markup(), parse_mode='HTML')
        bot.set_state(message.from_user.id, reg_states_admin.get_lesson_number, message.chat.id)

    @bot.message_handler(state=reg_states_admin.get_lesson_number)
    def delete_lesson(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è reg_states_admin.get_lesson_number.
        –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É—Ä–æ–∫–∞.
        –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –ª–∏–±–æ:
        - –≤—ã–≤–æ–¥–∏—Ç –∞–¥–º–∏–Ω—É –∫–ª–∏–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—Å–∞–Ω –Ω–∞ —ç—Ç–æ –≤—Ä–µ–º—è, –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ reg_states_admin.delete_confirmation
        –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏, –∏–ª–∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ—Ç–∞ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –¥–µ–Ω—å;
        - –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∞–¥–º–∏–Ω—É –≤–≤–µ—Å—Ç–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Ä–æ–∫–∞ –∏ –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ reg_states_admin.create_lesson
        –∏–ª–∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ—Ç–∞ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –¥–µ–Ω—å.
        :param message: —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return: None
        """

        lessons_dict = {
            'üïó8:00': 1,
            'üïó8:45': 2,
            'üïó9:30': 3,
            'üïó10:15': 4,
            'üïó11:00': 5,
            'üïó11:45': 6,
            'üïó12:30': 7,
            'üïó13:15': 8,
            'üïó17:30': 9,
            'üïó18:15': 10,
            'üïó19:00': 11,
        }
        choisen_lesson = lessons_dict.get(message.text)
        last_week = Week.select().order_by(Week.schedule_id.desc()).first()


        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            curr_weekday = data['weekday']
            action = data['action']
            data['week'] = last_week
            data['lesson'] = choisen_lesson
            date_of_lesson = last_week.monday_date + timedelta(days=curr_weekday)
            data['date_of_lesson'] = date_of_lesson

        curr_lesson = Lesson.get_or_none(Lesson.lesson_number == choisen_lesson,
                                         Lesson.weekly_schedule == last_week,
                                         Lesson.day_of_week == curr_weekday)
        if '–£–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ' in action:
            if curr_lesson:
                curr_client = curr_lesson.client
                with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                    data['client_to_delete'] = curr_client

                bot.send_message(message.chat.id,
                                 f'–ù–∞ —ç—Ç–æ –≤—Ä–µ–º—è –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–ø–∏—Å—å: {curr_client.clients_name} {curr_client.clients_sirname}\n'
                                 f'–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–∫–∞ ({message.text})?',
                                 reply_markup=confirmation_in_schedule(), parse_mode='HTML')
                bot.set_state(message.from_user.id, reg_states_admin.delete_confirmation, message.chat.id)
            else:
                bot.send_message(message.chat.id,
                                 f'–ù–∞ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è',
                                 reply_markup=lessons_markup(), parse_mode='HTML')
        elif '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ' in action:
            if curr_lesson:
                bot.send_message(message.chat.id,
                                 f'–≠—Ç–æ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–æ. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è',
                                 reply_markup=lessons_markup(), parse_mode='HTML')
            else:
                bot.send_message(message.chat.id,
                                 f'–ö–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å –Ω–∞ —ç—Ç–æ –≤—Ä–µ–º—è? –ù–∞–ø–∏—à–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª',
                                 reply_markup=ReplyKeyboardRemove(), parse_mode='HTML')
                bot.set_state(message.from_user.id, reg_states_admin.create_lesson, message.chat.id)

    @bot.message_handler(state=reg_states_admin.create_lesson)
    def adding_lesson(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è reg_states_admin.create_lesson.
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–æ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤ –ë–î –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.
        –ï—Å–ª–∏ –≤—Å–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ  —Å–æ–∑–¥–∞–µ—Ç –º–æ–¥–µ–ª—å –Ω–æ–≤–æ–≥–æ —É—Ä–æ–∫–∞ –≤ –ë–î —Å –¥–∞–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º.
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ —É—Ä–æ–∫–∞.
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ª–∏—á–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏.
        –ú–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ –Ω–∞ reg_states_admin.admin_menu
        :param message: —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return: None
        """

        try:
            name_sirname = message.text.split()
            if len(name_sirname) != 2:
                raise DoesNotExist('–∫–ª–∏–µ–Ω—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n'
                                   '–ü—Ä–∏—à–ª–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –µ—â–µ —Ä–∞–∑')
            curr_client = Client.get_or_none(Client.clients_name == name_sirname[0],
                                             Client.clients_sirname == name_sirname[1])
            if curr_client is None:
                raise DoesNotExist('–∫–ª–∏–µ–Ω—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª\n'
                                   '–ü—Ä–∏—à–ª–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –µ—â–µ —Ä–∞–∑')
            with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                curr_weekday = data['weekday']
                action = data['action']
                last_week = data['week']
                choisen_lesson = data['lesson']
                date_of_lesson = data['date_of_lesson']
            try:
                Lesson.create(
                    lesson_date=date_of_lesson,
                    weekly_schedule=last_week,
                    client=curr_client,
                    day_of_week=curr_weekday,
                    lesson_number=choisen_lesson
                )
                bot.send_message(message.chat.id,
                                 f'–ö–ª–∏–µ–Ω—Ç –∑–∞–ø–∏—Å–∞–Ω!‚úÖ\n\n'
                                 f'{Lesson.days_dict.get(curr_weekday)}, '
                                 f'{Lesson.lessons_dict.get(choisen_lesson)} - {curr_client.clients_name} {curr_client.clients_sirname}',
                                 reply_markup=go_to_menu(), parse_mode='HTML')
                bot.send_message(curr_client.clients_chat_id,
                                 '–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ‚ö†Ô∏è. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"')
                bot.set_state(message.from_user.id, reg_states_admin.admin_menu, message.chat.id)
                with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                    data.clear()  # –û—á–∏—â–∞–µ–º –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å
            except Exception as e:
                bot.send_message(message.chat.id,
                                 f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞. –ü–û–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n'
                                 f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                                 reply_markup=choise_action(), parse_mode='HTML')
                with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                    data.clear()  # –û—á–∏—â–∞–µ–º –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å
                bot.set_state(message.from_user.id, reg_states_admin.choisen_action, message.chat.id)
        except DoesNotExist as e:
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —É—Ä–æ–∫–∞: {str(e)}\n"
                                              f"–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=go_to_menu(), parse_mode='HTML')

    @bot.message_handler(state=reg_states_admin.delete_confirmation,
                         func=lambda message: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é' in message.text)
    def confirm_delete(message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è reg_states_admin.delete_confirmation –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é".
        –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —É—Ä–æ–∫.
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è.
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏.
        –ú–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ reg_states_admin.admin_menu
        :param message: —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :return: None
        """

        try:
            with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                curr_client = data['client_to_delete']
                last_week = data['week']
                choisen_lesson = data['lesson']
                curr_weekday = data['weekday']

            lesson_to_delete = Lesson.get(
                (Lesson.lesson_number == choisen_lesson) &
                (Lesson.client == curr_client) &
                (Lesson.weekly_schedule == last_week) &
                (Lesson.day_of_week == curr_weekday)
            )
            deleted_count = lesson_to_delete.delete_instance()

            if deleted_count == 0:
                bot.send_message(message.chat.id,
                                 '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                                 reply_markup=lessons_markup(), parse_mode='HTML')
                bot.set_state(message.from_user.id, reg_states_admin.delete_lesson, message.chat.id)
            else:
                bot.send_message(message.chat.id,
                                 f'{curr_client.clients_name} {curr_client.clients_sirname} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω‚úÖ',
                                 reply_markup=go_to_menu(), parse_mode='HTML')
                bot.send_message(curr_client.clients_chat_id,
                                 '–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ‚ö†Ô∏è. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"')
                bot.set_state(message.from_user.id, reg_states_admin.admin_menu, message.chat.id)
            with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                data.clear()  # –û—á–∏—â–∞–µ–º –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å

        except Exception as e:
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è: {str(e)}\n"
                                              f"–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ",
                             reply_markup=go_to_menu(), parse_mode='HTML')
            bot.set_state(message.from_user.id, reg_states_admin.admin_menu, message.chat.id)



